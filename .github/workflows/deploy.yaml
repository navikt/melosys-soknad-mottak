name: Deploy

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
        environment:
          description: 'MiljÃ¸'
          required: true
          default: 'dev'
permissions:
  contents: write
  packages: write
  id-token: write
env:
  IMAGE: europe-north1-docker.pkg.dev/nais-management-233d/teammelosys/melosys-soknad-mottak:${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check_docker_image_exists:
    name: Check if docker image exists in registry
    runs-on: ubuntu-latest
    steps:
      - name: Login to NAIS registry
        uses: nais/login@v0
        with:
          team: teammelosys
      - name: Check if image exists
        id: check_image
        run: |
          if docker manifest inspect ${{ env.IMAGE }} >/dev/null 2>&1; then
            echo "Image eksisterer i registry"
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Image eksisterer ikke i registry"
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      exists: ${{ steps.check_image.outputs.image_exists }}

  build:
    runs-on: ubuntu-latest
    needs: check_docker_image_exists
    if: needs.check_docker_image_exists.outputs.exists != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test and build
        run: mvn --settings .github/maven-settings.xml clean package -B -e -U
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        with:
          team: teammelosys
          tag: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: always() && (needs.build.result == 'success' || needs.build.result == 'skipped')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy til dev-fss
        if: github.event.inputs.environment == 'dev' || (github.event_name == 'push' && github.ref == 'refs/heads/master')
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: nais.yaml
          IMAGE: ${{ env.IMAGE }}
          VAR: ingress=https://melosys-soknad-mottak.dev.intern.nav.no,KAFKA_POOL=nav-dev
          VARS: nais-dev.json
      - name: Deploy til prod-fss
        if: github.event.inputs.environment == 'prod' || (github.event_name == 'push' && github.ref == 'refs/heads/master')
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          RESOURCE: nais.yaml
          IMAGE: ${{ env.IMAGE }}
          VAR: ingress=https://melosys-soknad-mottak.intern.nav.no,KAFKA_POOL=nav-prod
          VARS: nais-prod.json
      - run: echo "COMMIT_MSG=$(git log --format=%s -n 1)" >> $GITHUB_ENV
      - name: Slack Notification (deploy success)
        if: success() && (github.event.inputs.environment == 'prod' || (github.event_name == 'push' && github.ref == 'refs/heads/master'))
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_USERNAME: Github Actions
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: 'melosys-soknad-mottak ble deployet til prod :rocket:'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ env.COMMIT_MSG }}
      - name: Slack Notification (deploy failure)
        if: failure() && (github.event.inputs.environment == 'prod' || (github.event_name == 'push' && github.ref == 'refs/heads/master'))
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: danger
          SLACK_USERNAME: Github Actions
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: ':crying_cat_face: melosys-soknad-mottak kunne ikke deployes til prod!'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ env.COMMIT_MSG }}